name: Run Pest tests

on:
  workflow_call:
    inputs:
      php-versions:
        description: 'Json array of PHP versions'
        default: '["8.1","8.2"]'
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: ${{ fromJSON(inputs.php-versions) }}

    name: PHP${{ matrix.php }}

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, xdebug
          coverage: xdebug
          tools: composer:v2
          github-token: ${{ secrets.YARD_BOT_PAT }}
        env:
          COMPOSER_AUTH_JSON: |
            {
              "http-basic": {
                "packagist.yard.nl": {
                  "username": "${{ secrets.YPACKAGIST_API_KEY }}",
                  "password": "${{ secrets.YPACKAGIST_PASSWORD }}"
                }
              }
            }

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer update --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Execute tests
        run: vendor/bin/pest --coverage-clover=coverage.xml

      - name: Coverage Report as Comment (Clover)
        if: github.event_name == 'pull_request'
        uses: lucassabreu/comment-coverage-clover@main
        with:
          file: coverage.xml
